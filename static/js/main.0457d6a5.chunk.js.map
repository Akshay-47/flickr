{"version":3,"sources":["components/Single.js","store/movies.js","store/scroll.js","components/MovieGrid.js","components/Main.js","store/index.js","index.js"],"names":["Single","useState","movieData","setMovieData","loading","setLoading","isError","setIsError","postId","useParams","getMovieData","url","a","async","axios","get","response","Promise","resolve","setTimeout","useEffect","baseUrl","data","getDescription","imageBasePath","poster_path","className","original_title","release_date","vote_average","vote_count","to","src","alt","title","overview","fetchMovies","pageNum","res","GET_INIT","GET_DONE","GET_ERROR","movieReducer","state","pagesFetched","fetchError","isFetching","list","action","type","payload","SET_SCROLL","scrollReducer","renderMovieList","movies","map","movie","index","key","_id","connect","scroll_","dispatch","getMovies","force","getState","length","moviesList","getNextMoviesPage","onPageScroll","position","value","window","scrollBy","pageYOffset","onScroll","event","el","target","scrollingElement","currentScrollTop","scrollTop","scrollHeight","offsetHeight","addEventListener","removeEventListener","Main","children","match","basename","exact","path","component","MovieGrid","reducer","combineReducers","moviesReducer","store","createStore","applyMiddleware","thunk","rootApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0457d6a5.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Link, useParams } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\n\nconst Single = () => {\n  const [movieData, setMovieData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { postId } = useParams();\n  async function getDescription() {\n    const baseUrl = \"https://akrp-server.herokuapp.com/movies/\" + postId;\n    try {\n      setLoading(true);\n      setIsError(false);\n      const response = await getMovieData(baseUrl);\n      setMovieData(response.data[0]);\n    } catch (error) {\n      setIsError(true);\n    }\n    setLoading(false);\n  }\n  const getMovieData = async url => {\n    const response = await axios.get(url);\n    return new Promise(resolve => setTimeout(() => resolve(response), 1000));\n  };\n  useEffect(() => {\n    getDescription();\n  }, []);\n\n  const singleItemUi = () => {\n    // function getGenres({ genres }) {\n    //   console.log(genres);\n    //   let _genres = [];\n    //   genres.forEach(element => {\n    //     _genres.push(element.name);\n    //   });\n    //   _genres.join(\",\");\n    //   return _genres;\n    // }\n    return (\n      <div className=\"single-item\">\n        <div className=\"main-title\">\n          <h1>{movieData.original_title}</h1>\n          <span className=\"release-date\">({movieData.release_date})</span>\n          <span className=\"vote-average\">\n            <span>\n              {movieData.vote_average}\n              <span className=\"vote-count\">{movieData.vote_count} votes</span>\n            </span>\n            /<small>10</small>\n          </span>\n        </div>\n        <span className=\"back-button\">\n          <Link to={\"/\"}>\n            <span className=\"back-arrow\">&larr;</span> Back\n          </Link>\n        </span>\n        <div className=\"heading\"></div>\n        <div className=\"secondary-info\">\n          {/* {JSON.parse(movieData.genres).map(e => {\n            return <p>{e.name}</p>;\n          })} */}\n        </div>\n        <div className=\"main-content\">\n          <div className=\"image-wrapper\">\n            <img\n              className=\"main-image\"\n              src={`${imageBasePath}`}\n              alt={movieData.title}\n            />\n          </div>\n          <div className=\"right-section\">\n            <p>{movieData.overview}</p>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const statusUi = () => {\n    if (isError) return <div>Something went wrong</div>;\n    else if (loading)\n      return (\n        <div className=\"centered\">\n          <div className=\"lds-hourglass centered\"></div>\n        </div>\n      );\n  };\n\n  const imageBasePath =\n    \"https://image.tmdb.org/t/p/original\" + movieData.poster_path;\n  return (\n    <>\n      {!loading && !isError && singleItemUi()}\n      {statusUi()}\n    </>\n  );\n};\n\nexport default Single;\n","// import fetchMovies from \"../data/movies\";\nimport axios from \"axios\";\n\nconst fetchMovies = async pageNum => {\n  const baseUrl = \"https://akrp-server.herokuapp.com/movies?p=\" + pageNum;\n  const res = await axios.get(baseUrl);\n  return res.data;\n};\n\nconst GET_INIT = \"movies/GET_INIT\";\nconst GET_DONE = \"movies/GET_DONE\";\nconst GET_ERROR = \"movies/GET_ERROR\";\n\nexport function getNextMoviesPage(force = false) {\n  return async (dispatch, getState) => {\n    const { movies } = getState();\n    if (movies.isFetching || (!force && movies.list.length > 0)) return;\n\n    dispatch({ type: GET_INIT });\n\n    try {\n      const moviesList = await fetchMovies(movies.pagesFetched + 1);\n      dispatch({ type: GET_DONE, payload: moviesList });\n    } catch (error) {\n      dispatch({ type: GET_ERROR, payload: error });\n    }\n  };\n}\n\n// Implement async data from redux thunk\nconst movieReducer = (\n  state = {\n    pagesFetched: 0,\n    fetchError: null,\n    isFetching: 0,\n    list: []\n  },\n  action\n) => {\n  switch (action.type) {\n    case GET_INIT:\n      return { ...state, isFetching: true, fetchError: null };\n    case GET_DONE:\n      const list = [...state.list, ...action.payload];\n      const pagesFetched = state.pagesFetched + 1;\n      return { ...state, isFetching: false, list, pagesFetched };\n    case GET_ERROR:\n      return { ...state, isFetching: false, fetchError: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default movieReducer;\n","const SET_SCROLL = \"SET_SCROLL\";\nexport function setScroll(scrollPosition) {\n  return {\n    type: SET_SCROLL,\n    payload: scrollPosition\n  };\n  //   dispatch({ type: SET_SCROLL, payload: scrollPosition });\n}\n\nconst scrollReducer = (state = 0, action) => {\n  switch (action.type) {\n    case SET_SCROLL:\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default scrollReducer;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { getNextMoviesPage } from \"../store/movies\";\nimport { setScroll } from \"../store/scroll\";\n\nconst MovieGrid = ({ movies, getMovies, onPageScroll, scroll_ }) => {\n  useEffect(() => {\n    setPageScroll(scroll_);\n    return () => {\n      onPageScroll(window.pageYOffset);\n    };\n  }, [scroll_]);\n\n  function setPageScroll(value) {\n    window.scrollBy(0, value);\n  }\n\n  useEffect(() => {\n    function onScroll(event) {\n      const el = event.target.scrollingElement;\n      const currentScrollTop = el.scrollTop;\n      const maxScrollTop = el.scrollHeight - el.offsetHeight;\n      if (maxScrollTop - currentScrollTop < 100) {\n        getMovies(true);\n      }\n    }\n\n    getMovies();\n\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n    // eslint-disable-next-line\n  });\n\n  function moviesUi() {\n    return <div className=\"movie-grid\">{renderMovieList(movies.list)}</div>;\n  }\n\n  function statusUi() {\n    if (movies.isFetching) {\n      return (\n        <div className=\"centered\">\n          <div className=\"lds-hourglass centered\"></div>\n        </div>\n      );\n    } else if (movies.fetchError) {\n      return <div>Failed to load movies.</div>;\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <div className=\"movies\">\n      <header>\n        <h1>\n          <Link to=\"/\">Flick Picker</Link>\n        </h1>\n      </header>\n      {moviesUi()}\n      {statusUi()}\n    </div>\n  );\n};\n\nconst imageBasePath = \"https://image.tmdb.org/t/p/w500\";\n\nconst renderMovieList = movies => {\n  return movies.map((movie, index) => {\n    return (\n      <div key={index} className=\"movie-item\">\n        <article className=\"\" key={index}>\n          <Link to={`/view/${movie._id}`}>\n            <div className=\"image-wrapper\">\n              <img src={`${imageBasePath}${movie.poster_path}`} alt=\"poster\" />\n            </div>\n            <div className=\"movie-title\">\n              <h3>{movie.original_title}</h3>\n            </div>\n          </Link>\n        </article>\n      </div>\n    );\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.movies,\n    scroll_: state.scroll_\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getMovies: force => dispatch(getNextMoviesPage(force)),\n    onPageScroll: position => dispatch(setScroll(position))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieGrid);\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport Single from \"../components/Single\";\nimport MovieGrid from \"../components/MovieGrid\";\n\nconst Main = ({ children, match }) => {\n  return (\n    <div>\n      <Route basename=\"/flickr\" exact path={match.path} component={MovieGrid} />\n      <Route\n        basename=\"/flickr\"\n        exact\n        path={`${match.path}view/:postId`}\n        component={Single}\n      />\n    </div>\n  );\n};\n\nexport default Main;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport moviesReducer from \"./movies\";\nimport scrollReducer from \"./scroll\";\n\nconst reducer = combineReducers({\n  movies: moviesReducer,\n  scroll_: scrollReducer\n});\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nif (process.env.NODE_ENV === \"development\") {\n  window.store = store;\n}\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"; // react-router v4/v5\n\n// Import Components\nimport Main from \"./components/Main\";\nimport store from \"./store\";\n\n// Import Scss\nimport \"./FlickPicker.scss\";\n\nconst rootApp = (\n  <Provider store={store}>\n    <Router>\n      <Switch>\n        <Route path=\"/\" component={Main} />\n      </Switch>\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(rootApp, document.getElementById(\"root\"));\n"],"sourceRoot":""}